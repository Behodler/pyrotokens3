/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  V2Migrator,
  V2MigratorInterface,
} from "../../V2Migrator.sol/V2Migrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lr_new",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LR_new",
    outputs: [
      {
        internalType: "contract LRNew",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ptoken2",
        type: "address",
      },
      {
        internalType: "address",
        name: "ptoken3",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "p2token_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p3token_expectedAmount",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "ptoken2",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "ptoken3",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "p2token_amount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "p3token_expectedAmount",
        type: "uint256[]",
      },
    ],
    name: "migrateMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010d5380380620010d58339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b610fab806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632810158e14610046578063a79721fe14610064578063c49b727814610080575b600080fd5b61004e61009c565b60405161005b91906107cf565b60405180910390f35b61007e60048036038101906100799190610872565b6100c0565b005b61009a60048036038101906100959190610af5565b6100d3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100cd338585858561016e565b50505050565b60005b845181101561016757610154338683815181106100f6576100f5610bcc565b5b602002602001015186848151811061011157610110610bcc565b5b602002602001015186858151811061012c5761012b610bcc565b5b602002602001015186868151811061014757610146610bcc565b5b602002602001015161016e565b808061015f90610c2a565b9150506100d6565b5050505050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663c55dae636040518163ffffffff1660e01b815260040160206040518083038186803b1580156101bb57600080fd5b505afa1580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f39190610c88565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340407536836040518263ffffffff1660e01b81526004016102519190610cc4565b60206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190610c88565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030890610d62565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8930886040518463ffffffff1660e01b815260040161034e93929190610d91565b602060405180830381600087803b15801561036857600080fd5b505af115801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a09190610e00565b5060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103dc9190610cc4565b60206040518083038186803b1580156103f457600080fd5b505afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610e42565b90508373ffffffffffffffffffffffffffffffffffffffff1663db006a75826040518263ffffffff1660e01b81526004016104679190610e6f565b602060405180830381600087803b15801561048157600080fd5b505af1158015610495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b99190610e42565b5060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104f59190610cc4565b60206040518083038186803b15801561050d57600080fd5b505afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610e42565b9050600083905060008173ffffffffffffffffffffffffffffffffffffffff166370a082318d6040518263ffffffff1660e01b81526004016105879190610cc4565b60206040518083038186803b15801561059f57600080fd5b505afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d79190610e42565b90508173ffffffffffffffffffffffffffffffffffffffff166340c10f198d856040518363ffffffff1660e01b8152600401610614929190610e8a565b602060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190610e42565b5060008273ffffffffffffffffffffffffffffffffffffffff166370a082318e6040518263ffffffff1660e01b81526004016106a29190610cc4565b60206040518083038186803b1580156106ba57600080fd5b505afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f29190610e42565b905088826107009190610eb3565b8114610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890610f55565b60405180910390fd5b50505050505050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061079561079061078b84610750565b610770565b610750565b9050919050565b60006107a78261077a565b9050919050565b60006107b98261079c565b9050919050565b6107c9816107ae565b82525050565b60006020820190506107e460008301846107c0565b92915050565b6000604051905090565b600080fd5b600080fd5b600061080982610750565b9050919050565b610819816107fe565b811461082457600080fd5b50565b60008135905061083681610810565b92915050565b6000819050919050565b61084f8161083c565b811461085a57600080fd5b50565b60008135905061086c81610846565b92915050565b6000806000806080858703121561088c5761088b6107f4565b5b600061089a87828801610827565b94505060206108ab87828801610827565b93505060406108bc8782880161085d565b92505060606108cd8782880161085d565b91505092959194509250565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610927826108de565b810181811067ffffffffffffffff82111715610946576109456108ef565b5b80604052505050565b60006109596107ea565b9050610965828261091e565b919050565b600067ffffffffffffffff821115610985576109846108ef565b5b602082029050602081019050919050565b600080fd5b60006109ae6109a98461096a565b61094f565b905080838252602082019050602084028301858111156109d1576109d0610996565b5b835b818110156109fa57806109e68882610827565b8452602084019350506020810190506109d3565b5050509392505050565b600082601f830112610a1957610a186108d9565b5b8135610a2984826020860161099b565b91505092915050565b600067ffffffffffffffff821115610a4d57610a4c6108ef565b5b602082029050602081019050919050565b6000610a71610a6c84610a32565b61094f565b90508083825260208201905060208402830185811115610a9457610a93610996565b5b835b81811015610abd5780610aa9888261085d565b845260208401935050602081019050610a96565b5050509392505050565b600082601f830112610adc57610adb6108d9565b5b8135610aec848260208601610a5e565b91505092915050565b60008060008060808587031215610b0f57610b0e6107f4565b5b600085013567ffffffffffffffff811115610b2d57610b2c6107f9565b5b610b3987828801610a04565b945050602085013567ffffffffffffffff811115610b5a57610b596107f9565b5b610b6687828801610a04565b935050604085013567ffffffffffffffff811115610b8757610b866107f9565b5b610b9387828801610ac7565b925050606085013567ffffffffffffffff811115610bb457610bb36107f9565b5b610bc087828801610ac7565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c358261083c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6857610c67610bfb565b5b600182019050919050565b600081519050610c8281610810565b92915050565b600060208284031215610c9e57610c9d6107f4565b5b6000610cac84828501610c73565b91505092915050565b610cbe816107fe565b82525050565b6000602082019050610cd96000830184610cb5565b92915050565b600082825260208201905092915050565b7f56324d6967726174653a20696e76616c6964207079726f546f6b656e20636f6e60008201527f74726163742e0000000000000000000000000000000000000000000000000000602082015250565b6000610d4c602683610cdf565b9150610d5782610cf0565b604082019050919050565b60006020820190508181036000830152610d7b81610d3f565b9050919050565b610d8b8161083c565b82525050565b6000606082019050610da66000830186610cb5565b610db36020830185610cb5565b610dc06040830184610d82565b949350505050565b60008115159050919050565b610ddd81610dc8565b8114610de857600080fd5b50565b600081519050610dfa81610dd4565b92915050565b600060208284031215610e1657610e156107f4565b5b6000610e2484828501610deb565b91505092915050565b600081519050610e3c81610846565b92915050565b600060208284031215610e5857610e576107f4565b5b6000610e6684828501610e2d565b91505092915050565b6000602082019050610e846000830184610d82565b92915050565b6000604082019050610e9f6000830185610cb5565b610eac6020830184610d82565b9392505050565b6000610ebe8261083c565b9150610ec98361083c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610efe57610efd610bfb565b5b828201905092915050565b7f56324d6967726174653a20496e76617269616e74206661696c7572652e000000600082015250565b6000610f3f601d83610cdf565b9150610f4a82610f09565b602082019050919050565b60006020820190508181036000830152610f6e81610f32565b905091905056fea2646970667358221220162faee4569bdfe04d5538951001db9f297f65d67736f035fa66d01a3efd791164736f6c63430008090033";

type V2MigratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: V2MigratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class V2Migrator__factory extends ContractFactory {
  constructor(...args: V2MigratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    lr_new: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<V2Migrator> {
    return super.deploy(lr_new, overrides || {}) as Promise<V2Migrator>;
  }
  override getDeployTransaction(
    lr_new: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(lr_new, overrides || {});
  }
  override attach(address: string): V2Migrator {
    return super.attach(address) as V2Migrator;
  }
  override connect(signer: Signer): V2Migrator__factory {
    return super.connect(signer) as V2Migrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V2MigratorInterface {
    return new utils.Interface(_abi) as V2MigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V2Migrator {
    return new Contract(address, _abi, signerOrProvider) as V2Migrator;
  }
}

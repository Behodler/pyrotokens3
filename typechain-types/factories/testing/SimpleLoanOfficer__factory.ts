/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleLoanOfficer,
  SimpleLoanOfficerInterface,
} from "../../testing/SimpleLoanOfficer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pyroToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "baseTokenBorrowed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pyroTokenStaked",
        type: "uint256",
      },
    ],
    name: "setObligationFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610315806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f7e6588314610030575b600080fd5b61004a60048036038101906100459190610194565b610060565b6040516100579190610216565b60405180910390f35b60008473ffffffffffffffffffffffffffffffffffffffff166362748c9b8585856040518463ffffffff1660e01b815260040161009f9392919061024f565b602060405180830381600087803b1580156100b957600080fd5b505af11580156100cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f191906102b2565b9050949350505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061012b82610100565b9050919050565b61013b81610120565b811461014657600080fd5b50565b60008135905061015881610132565b92915050565b6000819050919050565b6101718161015e565b811461017c57600080fd5b50565b60008135905061018e81610168565b92915050565b600080600080608085870312156101ae576101ad6100fb565b5b60006101bc87828801610149565b94505060206101cd87828801610149565b93505060406101de8782880161017f565b92505060606101ef8782880161017f565b91505092959194509250565b60008115159050919050565b610210816101fb565b82525050565b600060208201905061022b6000830184610207565b92915050565b61023a81610120565b82525050565b6102498161015e565b82525050565b60006060820190506102646000830186610231565b6102716020830185610240565b61027e6040830184610240565b949350505050565b61028f816101fb565b811461029a57600080fd5b50565b6000815190506102ac81610286565b92915050565b6000602082840312156102c8576102c76100fb565b5b60006102d68482850161029d565b9150509291505056fea2646970667358221220252446b53159ca11e0660da6ec4f6e19f68cc55c75ec39c34802bfcdd46b75c064736f6c63430008090033";

type SimpleLoanOfficerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleLoanOfficerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleLoanOfficer__factory extends ContractFactory {
  constructor(...args: SimpleLoanOfficerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleLoanOfficer> {
    return super.deploy(overrides || {}) as Promise<SimpleLoanOfficer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleLoanOfficer {
    return super.attach(address) as SimpleLoanOfficer;
  }
  override connect(signer: Signer): SimpleLoanOfficer__factory {
    return super.connect(signer) as SimpleLoanOfficer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleLoanOfficerInterface {
    return new utils.Interface(_abi) as SimpleLoanOfficerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLoanOfficer {
    return new Contract(address, _abi, signerOrProvider) as SimpleLoanOfficer;
  }
}

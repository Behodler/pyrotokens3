/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PyroSender, PyroSenderInterface } from "../../testing/PyroSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pyro",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "PyroToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061042b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630779afe61461003b5780631e9a69501461006b575b600080fd5b6100556004803603810190610050919061024a565b610087565b60405161006291906102b8565b60405180910390f35b610085600480360381019061008091906102d3565b61011f565b005b60008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016100c4929190610331565b602060405180830381600087803b1580156100de57600080fd5b505af11580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101169190610386565b90509392505050565b8173ffffffffffffffffffffffffffffffffffffffff16631e9a695030836040518363ffffffff1660e01b815260040161015a929190610331565b602060405180830381600087803b15801561017457600080fd5b505af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac91906103c8565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101e1826101b6565b9050919050565b6101f1816101d6565b81146101fc57600080fd5b50565b60008135905061020e816101e8565b92915050565b6000819050919050565b61022781610214565b811461023257600080fd5b50565b6000813590506102448161021e565b92915050565b600080600060608486031215610263576102626101b1565b5b6000610271868287016101ff565b9350506020610282868287016101ff565b925050604061029386828701610235565b9150509250925092565b60008115159050919050565b6102b28161029d565b82525050565b60006020820190506102cd60008301846102a9565b92915050565b600080604083850312156102ea576102e96101b1565b5b60006102f8858286016101ff565b925050602061030985828601610235565b9150509250929050565b61031c816101d6565b82525050565b61032b81610214565b82525050565b60006040820190506103466000830185610313565b6103536020830184610322565b9392505050565b6103638161029d565b811461036e57600080fd5b50565b6000815190506103808161035a565b92915050565b60006020828403121561039c5761039b6101b1565b5b60006103aa84828501610371565b91505092915050565b6000815190506103c28161021e565b92915050565b6000602082840312156103de576103dd6101b1565b5b60006103ec848285016103b3565b9150509291505056fea26469706673582212207f126eef9f22494347bc28e85c2eb82f3347591b8b57d6171a2d9adbd5bce07d64736f6c63430008090033";

type PyroSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PyroSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PyroSender__factory extends ContractFactory {
  constructor(...args: PyroSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PyroSender> {
    return super.deploy(overrides || {}) as Promise<PyroSender>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PyroSender {
    return super.attach(address) as PyroSender;
  }
  override connect(signer: Signer): PyroSender__factory {
    return super.connect(signer) as PyroSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PyroSenderInterface {
    return new utils.Interface(_abi) as PyroSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PyroSender {
    return new Contract(address, _abi, signerOrProvider) as PyroSender;
  }
}

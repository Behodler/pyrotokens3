/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PyroWethProxy, PyroWethProxyInterface } from "../PyroWethProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pyroWeth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pyroWeth",
    outputs: [
      {
        internalType: "contract PyroTokenLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pyroTokenAmount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth10",
    outputs: [
      {
        internalType: "contract IWETH10",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260018060146101000a81548160ff0219169083151502179055503480156200002b57600080fd5b506040516200142838038062001428833981810160405281019062000051919062000392565b62000062336200026460201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55dae636040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010c57600080fd5b505afa15801562000121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000147919062000392565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040162000206929190620003f0565b602060405180830381600087803b1580156200022157600080fd5b505af115801562000236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025c91906200045a565b50506200048c565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200035a826200032d565b9050919050565b6200036c816200034d565b81146200037857600080fd5b50565b6000815190506200038c8162000361565b92915050565b600060208284031215620003ab57620003aa62000328565b5b6000620003bb848285016200037b565b91505092915050565b620003cf816200034d565b82525050565b6000819050919050565b620003ea81620003d5565b82525050565b6000604082019050620004076000830185620003c4565b620004166020830184620003df565b9392505050565b60008115159050919050565b62000434816200041d565b81146200044057600080fd5b50565b600081519050620004548162000429565b92915050565b60006020828403121562000473576200047262000328565b5b6000620004838482850162000443565b91505092915050565b610f8c806200049c6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012a578063a0712d6814610155578063db006a7514610185578063f2fde38b146101c25761007b565b80632b2cdf001461008057806360759d69146100ab57806370a08231146100d6578063715018a614610113575b600080fd5b34801561008c57600080fd5b506100956101eb565b6040516100a29190610b05565b60405180910390f35b3480156100b757600080fd5b506100c0610211565b6040516100cd9190610b41565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610b9f565b610237565b60405161010a9190610be5565b60405180910390f35b34801561011f57600080fd5b506101286102eb565b005b34801561013657600080fd5b5061013f61036c565b60405161014c9190610c0f565b60405180910390f35b61016f600480360381019061016a9190610c56565b610395565b60405161017c9190610be5565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a79190610c56565b610652565b6040516101b99190610be5565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e49190610b9f565b6108d1565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016102949190610c0f565b60206040518083038186803b1580156102ac57600080fd5b505afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e49190610c98565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff1661030a61036c565b73ffffffffffffffffffffffffffffffffffffffff1614610360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035790610d22565b60405180910390fd5b61036a60006109c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160149054906101000a900460ff166103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90610d8e565b60405180910390fd5b6000600160146101000a81548160ff02191690831515021790555081341480156104105750600082115b61044f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044690610dfa565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b50505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052f9190610c0f565b60206040518083038186803b15801561054757600080fd5b505afa15801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190610c98565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016105de929190610e1a565b602060405180830381600087803b1580156105f857600080fd5b505af115801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190610c98565b91505060018060146101000a81548160ff021916908315150217905550919050565b6000600160149054906101000a900460ff166106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90610d8e565b60405180910390fd5b6000600160146101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7464db13330856040518463ffffffff1660e01b815260040161071d93929190610e43565b602060405180830381600087803b15801561073757600080fd5b505af115801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f9190610c98565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107cd9190610c0f565b60206040518083038186803b1580156107e557600080fd5b505afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190610c98565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287833836040518363ffffffff1660e01b815260040161087c929190610e9b565b600060405180830381600087803b15801561089657600080fd5b505af11580156108aa573d6000803e3d6000fd5b505050508091505060018060146101000a81548160ff021916908315150217905550919050565b3373ffffffffffffffffffffffffffffffffffffffff166108f061036c565b73ffffffffffffffffffffffffffffffffffffffff1614610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093d90610d22565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad90610f36565b60405180910390fd5b6109bf816109c2565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610acb610ac6610ac184610a86565b610aa6565b610a86565b9050919050565b6000610add82610ab0565b9050919050565b6000610aef82610ad2565b9050919050565b610aff81610ae4565b82525050565b6000602082019050610b1a6000830184610af6565b92915050565b6000610b2b82610ad2565b9050919050565b610b3b81610b20565b82525050565b6000602082019050610b566000830184610b32565b92915050565b600080fd5b6000610b6c82610a86565b9050919050565b610b7c81610b61565b8114610b8757600080fd5b50565b600081359050610b9981610b73565b92915050565b600060208284031215610bb557610bb4610b5c565b5b6000610bc384828501610b8a565b91505092915050565b6000819050919050565b610bdf81610bcc565b82525050565b6000602082019050610bfa6000830184610bd6565b92915050565b610c0981610b61565b82525050565b6000602082019050610c246000830184610c00565b92915050565b610c3381610bcc565b8114610c3e57600080fd5b50565b600081359050610c5081610c2a565b92915050565b600060208284031215610c6c57610c6b610b5c565b5b6000610c7a84828501610c41565b91505092915050565b600081519050610c9281610c2a565b92915050565b600060208284031215610cae57610cad610b5c565b5b6000610cbc84828501610c83565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d0c602083610cc5565b9150610d1782610cd6565b602082019050919050565b60006020820190508181036000830152610d3b81610cff565b9050919050565b7f5079726f50726f78793a207265656e7472616e63792067756172640000000000600082015250565b6000610d78601b83610cc5565b9150610d8382610d42565b602082019050919050565b60006020820190508181036000830152610da781610d6b565b9050919050565b7f5079726f5765746850726f78793a20616d6f756e7420696e76617269616e7400600082015250565b6000610de4601f83610cc5565b9150610def82610dae565b602082019050919050565b60006020820190508181036000830152610e1381610dd7565b9050919050565b6000604082019050610e2f6000830185610c00565b610e3c6020830184610bd6565b9392505050565b6000606082019050610e586000830186610c00565b610e656020830185610c00565b610e726040830184610bd6565b949350505050565b6000610e8582610a86565b9050919050565b610e9581610e7a565b82525050565b6000604082019050610eb06000830185610e8c565b610ebd6020830184610bd6565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f20602683610cc5565b9150610f2b82610ec4565b604082019050919050565b60006020820190508181036000830152610f4f81610f13565b905091905056fea2646970667358221220657cd784e65aae72139713ef0b760dfef464d077f44852aa39fd7648cca255d864736f6c63430008090033";

type PyroWethProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PyroWethProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PyroWethProxy__factory extends ContractFactory {
  constructor(...args: PyroWethProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _pyroWeth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PyroWethProxy> {
    return super.deploy(_pyroWeth, overrides || {}) as Promise<PyroWethProxy>;
  }
  override getDeployTransaction(
    _pyroWeth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pyroWeth, overrides || {});
  }
  override attach(address: string): PyroWethProxy {
    return super.attach(address) as PyroWethProxy;
  }
  override connect(signer: Signer): PyroWethProxy__factory {
    return super.connect(signer) as PyroWethProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PyroWethProxyInterface {
    return new utils.Interface(_abi) as PyroWethProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PyroWethProxy {
    return new Contract(address, _abi, signerOrProvider) as PyroWethProxy;
  }
}

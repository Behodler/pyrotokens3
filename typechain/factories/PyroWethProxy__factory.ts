/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PyroWethProxy, PyroWethProxyInterface } from "../PyroWethProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pyroWeth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "calculateMintedPyroWeth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pyroTokenAmount",
        type: "uint256",
      },
    ],
    name: "calculateRedeemedWeth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pyroWeth",
    outputs: [
      {
        internalType: "contract PyroTokenLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pyroTokenAmount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth10",
    outputs: [
      {
        internalType: "contract IWETH10",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260018060146101000a81548160ff0219169083151502179055503480156200002b57600080fd5b50604051620018ba380380620018ba833981810160405281019062000051919062000356565b62000062336200026460201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55dae636040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010c57600080fd5b505afa15801562000121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000147919062000356565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040162000206929190620003d0565b602060405180830381600087803b1580156200022157600080fd5b505af115801562000236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025c919062000382565b50506200047b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620003398162000447565b92915050565b600081519050620003508162000461565b92915050565b6000602082840312156200036957600080fd5b6000620003798482850162000328565b91505092915050565b6000602082840312156200039557600080fd5b6000620003a5848285016200033f565b91505092915050565b620003b981620003fd565b82525050565b620003ca816200043d565b82525050565b6000604082019050620003e76000830185620003ae565b620003f66020830184620003bf565b9392505050565b60006200040a826200041d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200045281620003fd565b81146200045e57600080fd5b50565b6200046c8162000411565b81146200047857600080fd5b50565b61142f806200048b6000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b1461017d578063a0712d68146101a8578063b47e740f146101d8578063db006a7514610215578063f2fde38b1461025257610091565b80632b2cdf001461009657806360759d69146100c1578063700bc71f146100ec57806370a0823114610129578063715018a614610166575b600080fd5b3480156100a257600080fd5b506100ab61027b565b6040516100b8919061106c565b60405180910390f35b3480156100cd57600080fd5b506100d66102a1565b6040516100e39190611087565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610e9f565b6102c7565b6040516101209190611122565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b9190610e76565b6103b3565b60405161015d9190611122565b60405180910390f35b34801561017257600080fd5b5061017b610467565b005b34801561018957600080fd5b506101926104e8565b60405161019f9190610fc8565b60405180910390f35b6101c260048036038101906101bd9190610e9f565b610511565b6040516101cf9190611122565b60405180910390f35b3480156101e457600080fd5b506101ff60048036038101906101fa9190610e9f565b6107ce565b60405161020c9190611122565b60405180910390f35b34801561022157600080fd5b5061023c60048036038101906102379190610e9f565b610a03565b6040516102499190611122565b60405180910390f35b34801561025e57600080fd5b5061027960048036038101906102749190610e76565b610c82565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630adcdbaa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610ec8565b9050600081670de0b6b3a764000085610383919061117f565b61038d919061114e565b90506103e86103e7826103a0919061117f565b6103aa919061114e565b92505050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016104109190610fc8565b60206040518083038186803b15801561042857600080fd5b505afa15801561043c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104609190610ec8565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166104866104e8565b73ffffffffffffffffffffffffffffffffffffffff16146104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d3906110e2565b60405180910390fd5b6104e66000610d73565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160149054906101000a900460ff16610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906110c2565b60405180910390fd5b6000600160146101000a81548160ff021916908315150217905550813414801561058c5750600082115b6105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290611102565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561063557600080fd5b505af1158015610649573d6000803e3d6000fd5b50505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106ab9190610fc8565b60206040518083038186803b1580156106c357600080fd5b505afa1580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190610ec8565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161075a929190611043565b602060405180830381600087803b15801561077457600080fd5b505af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190610ec8565b91505060018060146101000a81548160ff021916908315150217905550919050565b6000806103e86001846107e1919061117f565b6107eb919061114e565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561085357600080fd5b505afa158015610867573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088b9190610ec8565b61089591906111d9565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016109169190610fc8565b60206040518083038186803b15801561092e57600080fd5b505afa158015610942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109669190610ec8565b9050600082670de0b6b3a76400008361097f919061117f565b610989919061114e565b905060006103e86103e78761099e919061117f565b6109a8919061114e565b9050600060646002836109bb919061117f565b6109c5919061114e565b9050600081836109d591906111d9565b9050670de0b6b3a764000084826109ec919061117f565b6109f6919061114e565b9650505050505050919050565b6000600160149054906101000a900460ff16610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b906110c2565b60405180910390fd5b6000600160146101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7464db13330856040518463ffffffff1660e01b8152600401610ace9392919061100c565b602060405180830381600087803b158015610ae857600080fd5b505af1158015610afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b209190610ec8565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b7e9190610fc8565b60206040518083038186803b158015610b9657600080fd5b505afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610ec8565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287833836040518363ffffffff1660e01b8152600401610c2d929190610fe3565b600060405180830381600087803b158015610c4757600080fd5b505af1158015610c5b573d6000803e3d6000fd5b505050508091505060018060146101000a81548160ff021916908315150217905550919050565b3373ffffffffffffffffffffffffffffffffffffffff16610ca16104e8565b73ffffffffffffffffffffffffffffffffffffffff1614610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee906110e2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e906110a2565b60405180910390fd5b610d7081610d73565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610e46816113cb565b92915050565b600081359050610e5b816113e2565b92915050565b600081519050610e70816113e2565b92915050565b600060208284031215610e8857600080fd5b6000610e9684828501610e37565b91505092915050565b600060208284031215610eb157600080fd5b6000610ebf84828501610e4c565b91505092915050565b600060208284031215610eda57600080fd5b6000610ee884828501610e61565b91505092915050565b610efa8161121f565b82525050565b610f098161120d565b82525050565b610f188161125b565b82525050565b610f278161127f565b82525050565b6000610f3a60268361113d565b9150610f4582611301565b604082019050919050565b6000610f5d601b8361113d565b9150610f6882611350565b602082019050919050565b6000610f8060208361113d565b9150610f8b82611379565b602082019050919050565b6000610fa3601f8361113d565b9150610fae826113a2565b602082019050919050565b610fc281611251565b82525050565b6000602082019050610fdd6000830184610f00565b92915050565b6000604082019050610ff86000830185610ef1565b6110056020830184610fb9565b9392505050565b60006060820190506110216000830186610f00565b61102e6020830185610f00565b61103b6040830184610fb9565b949350505050565b60006040820190506110586000830185610f00565b6110656020830184610fb9565b9392505050565b60006020820190506110816000830184610f0f565b92915050565b600060208201905061109c6000830184610f1e565b92915050565b600060208201905081810360008301526110bb81610f2d565b9050919050565b600060208201905081810360008301526110db81610f50565b9050919050565b600060208201905081810360008301526110fb81610f73565b9050919050565b6000602082019050818103600083015261111b81610f96565b9050919050565b60006020820190506111376000830184610fb9565b92915050565b600082825260208201905092915050565b600061115982611251565b915061116483611251565b925082611174576111736112d2565b5b828204905092915050565b600061118a82611251565b915061119583611251565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111ce576111cd6112a3565b5b828202905092915050565b60006111e482611251565b91506111ef83611251565b925082821015611202576112016112a3565b5b828203905092915050565b600061121882611231565b9050919050565b600061122a82611231565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112668261126d565b9050919050565b600061127882611231565b9050919050565b600061128a82611291565b9050919050565b600061129c82611231565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5079726f50726f78793a207265656e7472616e63792067756172640000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5079726f5765746850726f78793a20616d6f756e7420696e76617269616e7400600082015250565b6113d48161120d565b81146113df57600080fd5b50565b6113eb81611251565b81146113f657600080fd5b5056fea26469706673582212200fb62e5be0a04429375a80107b9efa93fe4743710fbc2ba5203db7183261bace64736f6c63430008040033";

export class PyroWethProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _pyroWeth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PyroWethProxy> {
    return super.deploy(_pyroWeth, overrides || {}) as Promise<PyroWethProxy>;
  }
  getDeployTransaction(
    _pyroWeth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pyroWeth, overrides || {});
  }
  attach(address: string): PyroWethProxy {
    return super.attach(address) as PyroWethProxy;
  }
  connect(signer: Signer): PyroWethProxy__factory {
    return super.connect(signer) as PyroWethProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PyroWethProxyInterface {
    return new utils.Interface(_abi) as PyroWethProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PyroWethProxy {
    return new Contract(address, _abi, signerOrProvider) as PyroWethProxy;
  }
}

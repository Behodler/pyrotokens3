/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PyroWethProxy, PyroWethProxyInterface } from "../PyroWethProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pyroWeth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseTokenAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pyroWeth",
    outputs: [
      {
        internalType: "contract PyroTokenLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pyroTokenAmount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth10",
    outputs: [
      {
        internalType: "contract IWETH10",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260018060146101000a81548160ff0219169083151502179055503480156200002b57600080fd5b50604051620013ec380380620013ec833981810160405281019062000051919062000356565b62000062336200026460201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55dae636040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010c57600080fd5b505afa15801562000121573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000147919062000356565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040162000206929190620003d0565b602060405180830381600087803b1580156200022157600080fd5b505af115801562000236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025c919062000382565b50506200047b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620003398162000447565b92915050565b600081519050620003508162000461565b92915050565b6000602082840312156200036957600080fd5b6000620003798482850162000328565b91505092915050565b6000602082840312156200039557600080fd5b6000620003a5848285016200033f565b91505092915050565b620003b981620003fd565b82525050565b620003ca816200043d565b82525050565b6000604082019050620003e76000830185620003ae565b620003f66020830184620003bf565b9392505050565b60006200040a826200041d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200045281620003fd565b81146200045e57600080fd5b50565b6200046c8162000411565b81146200047857600080fd5b50565b610f61806200048b6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461012a578063a0712d6814610155578063db006a7514610185578063f2fde38b146101c25761007b565b80632b2cdf001461008057806360759d69146100ab57806370a08231146100d6578063715018a614610113575b600080fd5b34801561008c57600080fd5b506100956101eb565b6040516100a29190610cbb565b60405180910390f35b3480156100b757600080fd5b506100c0610211565b6040516100cd9190610cd6565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610ac5565b610237565b60405161010a9190610d71565b60405180910390f35b34801561011f57600080fd5b506101286102eb565b005b34801561013657600080fd5b5061013f61036c565b60405161014c9190610c17565b60405180910390f35b61016f600480360381019061016a9190610aee565b610395565b60405161017c9190610d71565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a79190610aee565b610652565b6040516101b99190610d71565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e49190610ac5565b6108d1565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016102949190610c17565b60206040518083038186803b1580156102ac57600080fd5b505afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e49190610b17565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff1661030a61036c565b73ffffffffffffffffffffffffffffffffffffffff1614610360576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035790610d31565b60405180910390fd5b61036a60006109c2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160149054906101000a900460ff166103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90610d11565b60405180910390fd5b6000600160146101000a81548160ff02191690831515021790555081341480156104105750600082115b61044f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044690610d51565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b50505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052f9190610c17565b60206040518083038186803b15801561054757600080fd5b505afa15801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190610b17565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016105de929190610c92565b602060405180830381600087803b1580156105f857600080fd5b505af115801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190610b17565b91505060018060146101000a81548160ff021916908315150217905550919050565b6000600160149054906101000a900460ff166106a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069a90610d11565b60405180910390fd5b6000600160146101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7464db13330856040518463ffffffff1660e01b815260040161071d93929190610c5b565b602060405180830381600087803b15801561073757600080fd5b505af115801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f9190610b17565b506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107cd9190610c17565b60206040518083038186803b1580156107e557600080fd5b505afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190610b17565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663205c287833836040518363ffffffff1660e01b815260040161087c929190610c32565b600060405180830381600087803b15801561089657600080fd5b505af11580156108aa573d6000803e3d6000fd5b505050508091505060018060146101000a81548160ff021916908315150217905550919050565b3373ffffffffffffffffffffffffffffffffffffffff166108f061036c565b73ffffffffffffffffffffffffffffffffffffffff1614610946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093d90610d31565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad90610cf1565b60405180910390fd5b6109bf816109c2565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610a9581610efd565b92915050565b600081359050610aaa81610f14565b92915050565b600081519050610abf81610f14565b92915050565b600060208284031215610ad757600080fd5b6000610ae584828501610a86565b91505092915050565b600060208284031215610b0057600080fd5b6000610b0e84828501610a9b565b91505092915050565b600060208284031215610b2957600080fd5b6000610b3784828501610ab0565b91505092915050565b610b4981610daf565b82525050565b610b5881610d9d565b82525050565b610b6781610deb565b82525050565b610b7681610e0f565b82525050565b6000610b89602683610d8c565b9150610b9482610e33565b604082019050919050565b6000610bac601b83610d8c565b9150610bb782610e82565b602082019050919050565b6000610bcf602083610d8c565b9150610bda82610eab565b602082019050919050565b6000610bf2601f83610d8c565b9150610bfd82610ed4565b602082019050919050565b610c1181610de1565b82525050565b6000602082019050610c2c6000830184610b4f565b92915050565b6000604082019050610c476000830185610b40565b610c546020830184610c08565b9392505050565b6000606082019050610c706000830186610b4f565b610c7d6020830185610b4f565b610c8a6040830184610c08565b949350505050565b6000604082019050610ca76000830185610b4f565b610cb46020830184610c08565b9392505050565b6000602082019050610cd06000830184610b5e565b92915050565b6000602082019050610ceb6000830184610b6d565b92915050565b60006020820190508181036000830152610d0a81610b7c565b9050919050565b60006020820190508181036000830152610d2a81610b9f565b9050919050565b60006020820190508181036000830152610d4a81610bc2565b9050919050565b60006020820190508181036000830152610d6a81610be5565b9050919050565b6000602082019050610d866000830184610c08565b92915050565b600082825260208201905092915050565b6000610da882610dc1565b9050919050565b6000610dba82610dc1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610df682610dfd565b9050919050565b6000610e0882610dc1565b9050919050565b6000610e1a82610e21565b9050919050565b6000610e2c82610dc1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5079726f50726f78793a207265656e7472616e63792067756172640000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5079726f5765746850726f78793a20616d6f756e7420696e76617269616e7400600082015250565b610f0681610d9d565b8114610f1157600080fd5b50565b610f1d81610de1565b8114610f2857600080fd5b5056fea26469706673582212201670df1dd4929e9b982f93f9891440171bd2d7c9a575f0a700b1a6e6f848e0aa64736f6c63430008040033";

export class PyroWethProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _pyroWeth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PyroWethProxy> {
    return super.deploy(_pyroWeth, overrides || {}) as Promise<PyroWethProxy>;
  }
  getDeployTransaction(
    _pyroWeth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pyroWeth, overrides || {});
  }
  attach(address: string): PyroWethProxy {
    return super.attach(address) as PyroWethProxy;
  }
  connect(signer: Signer): PyroWethProxy__factory {
    return super.connect(signer) as PyroWethProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PyroWethProxyInterface {
    return new utils.Interface(_abi) as PyroWethProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PyroWethProxy {
    return new Contract(address, _abi, signerOrProvider) as PyroWethProxy;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { V2Migrator, V2MigratorInterface } from "../V2Migrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lr_old",
        type: "address",
      },
      {
        internalType: "address",
        name: "lr_new",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LR_new",
    outputs: [
      {
        internalType: "contract LRNew",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LR_old",
    outputs: [
      {
        internalType: "contract LROld",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ptoken2",
        type: "address",
      },
      {
        internalType: "address",
        name: "ptoken3",
        type: "address",
      },
      {
        internalType: "string",
        name: "nameNew",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbolNew",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "p2token_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p3token_expectedAmount",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ee3380380610ee3833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610d80806101636000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632810158e1461004657806336ae773b1461006457806375d8e63a14610082575b600080fd5b61004e61009e565b60405161005b91906109c2565b60405180910390f35b61006c6100c4565b60405161007991906109dd565b60405180910390f35b61009c6004803603810190610097919061073c565b6100e8565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600086905060008173ffffffffffffffffffffffffffffffffffffffff1663c55dae636040518163ffffffff1660e01b815260040160206040518083038186803b15801561013557600080fd5b505afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d9190610713565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634231df228389896040518463ffffffff1660e01b81526004016101d093929190610954565b60206040518083038186803b1580156101e857600080fd5b505afa1580156101fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102209190610713565b90508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610287906109f8565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016102cd9392919061091d565b602060405180830381600087803b1580156102e757600080fd5b505af11580156102fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031f91906107f5565b508273ffffffffffffffffffffffffffffffffffffffff1663db006a75866040518263ffffffff1660e01b81526004016103599190610a38565b602060405180830381600087803b15801561037357600080fd5b505af1158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab919061081e565b5060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103e79190610902565b60206040518083038186803b1580156103ff57600080fd5b505afa158015610413573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610437919061081e565b9050600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104799190610902565b60206040518083038186803b15801561049157600080fd5b505afa1580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c9919061081e565b90508173ffffffffffffffffffffffffffffffffffffffff166340c10f1933856040518363ffffffff1660e01b8152600401610506929190610999565b602060405180830381600087803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610558919061081e565b5060008273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105949190610902565b60206040518083038186803b1580156105ac57600080fd5b505afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e4919061081e565b905087826105f29190610ac5565b8114610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a90610a18565b60405180910390fd5b50505050505050505050505050565b600061065561065084610a78565b610a53565b90508281526020810184848401111561066d57600080fd5b610678848285610bab565b509392505050565b60008135905061068f81610d05565b92915050565b6000815190506106a481610d05565b92915050565b6000815190506106b981610d1c565b92915050565b600082601f8301126106d057600080fd5b81356106e0848260208601610642565b91505092915050565b6000813590506106f881610d33565b92915050565b60008151905061070d81610d33565b92915050565b60006020828403121561072557600080fd5b600061073384828501610695565b91505092915050565b60008060008060008060c0878903121561075557600080fd5b600061076389828a01610680565b965050602061077489828a01610680565b955050604087013567ffffffffffffffff81111561079157600080fd5b61079d89828a016106bf565b945050606087013567ffffffffffffffff8111156107ba57600080fd5b6107c689828a016106bf565b93505060806107d789828a016106e9565b92505060a06107e889828a016106e9565b9150509295509295509295565b60006020828403121561080757600080fd5b6000610815848285016106aa565b91505092915050565b60006020828403121561083057600080fd5b600061083e848285016106fe565b91505092915050565b61085081610b1b565b82525050565b61085f81610b63565b82525050565b61086e81610b87565b82525050565b600061087f82610aa9565b6108898185610ab4565b9350610899818560208601610bba565b6108a281610c7c565b840191505092915050565b60006108ba602683610ab4565b91506108c582610c8d565b604082019050919050565b60006108dd601d83610ab4565b91506108e882610cdc565b602082019050919050565b6108fc81610b59565b82525050565b60006020820190506109176000830184610847565b92915050565b60006060820190506109326000830186610847565b61093f6020830185610847565b61094c60408301846108f3565b949350505050565b60006060820190506109696000830186610847565b818103602083015261097b8185610874565b9050818103604083015261098f8184610874565b9050949350505050565b60006040820190506109ae6000830185610847565b6109bb60208301846108f3565b9392505050565b60006020820190506109d76000830184610856565b92915050565b60006020820190506109f26000830184610865565b92915050565b60006020820190508181036000830152610a11816108ad565b9050919050565b60006020820190508181036000830152610a31816108d0565b9050919050565b6000602082019050610a4d60008301846108f3565b92915050565b6000610a5d610a6e565b9050610a698282610bed565b919050565b6000604051905090565b600067ffffffffffffffff821115610a9357610a92610c4d565b5b610a9c82610c7c565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610ad082610b59565b9150610adb83610b59565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1057610b0f610c1e565b5b828201905092915050565b6000610b2682610b39565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b6e82610b75565b9050919050565b6000610b8082610b39565b9050919050565b6000610b9282610b99565b9050919050565b6000610ba482610b39565b9050919050565b82818337600083830152505050565b60005b83811015610bd8578082015181840152602081019050610bbd565b83811115610be7576000848401525b50505050565b610bf682610c7c565b810181811067ffffffffffffffff82111715610c1557610c14610c4d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f56324d6967726174653a20696e76616c6964207079726f746f6b656e20636f6e60008201527f74726163742e0000000000000000000000000000000000000000000000000000602082015250565b7f56324d6967726174653a20496e76617269616e74206661696c7572652e000000600082015250565b610d0e81610b1b565b8114610d1957600080fd5b50565b610d2581610b2d565b8114610d3057600080fd5b50565b610d3c81610b59565b8114610d4757600080fd5b5056fea264697066735822122019d86ec91cb174f8478a4ecdf53b0cc69fed25161e9cdb824b119843467f962964736f6c63430008040033";

export class V2Migrator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    lr_old: string,
    lr_new: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<V2Migrator> {
    return super.deploy(lr_old, lr_new, overrides || {}) as Promise<V2Migrator>;
  }
  getDeployTransaction(
    lr_old: string,
    lr_new: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(lr_old, lr_new, overrides || {});
  }
  attach(address: string): V2Migrator {
    return super.attach(address) as V2Migrator;
  }
  connect(signer: Signer): V2Migrator__factory {
    return super.connect(signer) as V2Migrator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V2MigratorInterface {
    return new utils.Interface(_abi) as V2MigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V2Migrator {
    return new Contract(address, _abi, signerOrProvider) as V2Migrator;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { V2Migrator, V2MigratorInterface } from "../V2Migrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lr_new",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LR_new",
    outputs: [
      {
        internalType: "contract LRNew",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ptoken2",
        type: "address",
      },
      {
        internalType: "address",
        name: "ptoken3",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "p2token_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p3token_expectedAmount",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "ptoken2",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "ptoken3",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "p2token_amount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "p3token_expectedAmount",
        type: "uint256[]",
      },
    ],
    name: "migrateMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110bc3803806110bc8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b610fae8061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632810158e14610046578063a79721fe14610064578063c49b727814610080575b600080fd5b61004e61009c565b60405161005b9190610c0c565b60405180910390f35b61007e600480360381019061007991906109a6565b6100c0565b005b61009a60048036038101906100959190610a09565b6100d3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100cd3385858585610206565b50505050565b60005b84518110156101ff576101ec3386838151811061011c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015186848151811061015d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015186858151811061019e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518686815181106101df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610206565b80806101f790610e03565b9150506100d6565b5050505050565b600084905060008173ffffffffffffffffffffffffffffffffffffffff1663c55dae636040518163ffffffff1660e01b815260040160206040518083038186803b15801561025357600080fd5b505afa158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b919061097d565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340407536836040518263ffffffff1660e01b81526004016102e99190610b91565b60206040518083038186803b15801561030157600080fd5b505afa158015610315573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610339919061097d565b90508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a090610c47565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd8930886040518463ffffffff1660e01b81526004016103e693929190610bac565b602060405180830381600087803b15801561040057600080fd5b505af1158015610414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104389190610acc565b5060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104749190610b91565b60206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610af5565b90508373ffffffffffffffffffffffffffffffffffffffff1663db006a75826040518263ffffffff1660e01b81526004016104ff9190610c67565b602060405180830381600087803b15801561051957600080fd5b505af115801561052d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105519190610af5565b5060008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161058d9190610b91565b60206040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd9190610af5565b9050600083905060008173ffffffffffffffffffffffffffffffffffffffff166370a082318d6040518263ffffffff1660e01b815260040161061f9190610b91565b60206040518083038186803b15801561063757600080fd5b505afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f9190610af5565b90508173ffffffffffffffffffffffffffffffffffffffff166340c10f198d856040518363ffffffff1660e01b81526004016106ac929190610be3565b602060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe9190610af5565b5060008273ffffffffffffffffffffffffffffffffffffffff166370a082318e6040518263ffffffff1660e01b815260040161073a9190610b91565b60206040518083038186803b15801561075257600080fd5b505afa158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a9190610af5565b905088826107989190610d10565b81146107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d090610c27565b60405180910390fd5b50505050505050505050505050565b60006107fb6107f684610ca7565b610c82565b9050808382526020820190508285602086028201111561081a57600080fd5b60005b8581101561084a578161083088826108c0565b84526020840193506020830192505060018101905061081d565b5050509392505050565b600061086761086284610cd3565b610c82565b9050808382526020820190508285602086028201111561088657600080fd5b60005b858110156108b6578161089c8882610953565b845260208401935060208301925050600181019050610889565b5050509392505050565b6000813590506108cf81610f33565b92915050565b6000815190506108e481610f33565b92915050565b600082601f8301126108fb57600080fd5b813561090b8482602086016107e8565b91505092915050565b600082601f83011261092557600080fd5b8135610935848260208601610854565b91505092915050565b60008151905061094d81610f4a565b92915050565b60008135905061096281610f61565b92915050565b60008151905061097781610f61565b92915050565b60006020828403121561098f57600080fd5b600061099d848285016108d5565b91505092915050565b600080600080608085870312156109bc57600080fd5b60006109ca878288016108c0565b94505060206109db878288016108c0565b93505060406109ec87828801610953565b92505060606109fd87828801610953565b91505092959194509250565b60008060008060808587031215610a1f57600080fd5b600085013567ffffffffffffffff811115610a3957600080fd5b610a45878288016108ea565b945050602085013567ffffffffffffffff811115610a6257600080fd5b610a6e878288016108ea565b935050604085013567ffffffffffffffff811115610a8b57600080fd5b610a9787828801610914565b925050606085013567ffffffffffffffff811115610ab457600080fd5b610ac087828801610914565b91505092959194509250565b600060208284031215610ade57600080fd5b6000610aec8482850161093e565b91505092915050565b600060208284031215610b0757600080fd5b6000610b1584828501610968565b91505092915050565b610b2781610d66565b82525050565b610b3681610dae565b82525050565b6000610b49601d83610cff565b9150610b5482610ebb565b602082019050919050565b6000610b6c602683610cff565b9150610b7782610ee4565b604082019050919050565b610b8b81610da4565b82525050565b6000602082019050610ba66000830184610b1e565b92915050565b6000606082019050610bc16000830186610b1e565b610bce6020830185610b1e565b610bdb6040830184610b82565b949350505050565b6000604082019050610bf86000830185610b1e565b610c056020830184610b82565b9392505050565b6000602082019050610c216000830184610b2d565b92915050565b60006020820190508181036000830152610c4081610b3c565b9050919050565b60006020820190508181036000830152610c6081610b5f565b9050919050565b6000602082019050610c7c6000830184610b82565b92915050565b6000610c8c610c9d565b9050610c988282610dd2565b919050565b6000604051905090565b600067ffffffffffffffff821115610cc257610cc1610e7b565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610cee57610ced610e7b565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000610d1b82610da4565b9150610d2683610da4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d5b57610d5a610e4c565b5b828201905092915050565b6000610d7182610d84565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610db982610dc0565b9050919050565b6000610dcb82610d84565b9050919050565b610ddb82610eaa565b810181811067ffffffffffffffff82111715610dfa57610df9610e7b565b5b80604052505050565b6000610e0e82610da4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e4157610e40610e4c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f56324d6967726174653a20496e76617269616e74206661696c7572652e000000600082015250565b7f56324d6967726174653a20696e76616c6964207079726f546f6b656e20636f6e60008201527f74726163742e0000000000000000000000000000000000000000000000000000602082015250565b610f3c81610d66565b8114610f4757600080fd5b50565b610f5381610d78565b8114610f5e57600080fd5b50565b610f6a81610da4565b8114610f7557600080fd5b5056fea2646970667358221220ddcdaa6b04ea9a0026242de7e68a2ffb513c4652176e732927667b94c8b5102764736f6c63430008040033";

export class V2Migrator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    lr_new: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<V2Migrator> {
    return super.deploy(lr_new, overrides || {}) as Promise<V2Migrator>;
  }
  getDeployTransaction(
    lr_new: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(lr_new, overrides || {});
  }
  attach(address: string): V2Migrator {
    return super.attach(address) as V2Migrator;
  }
  connect(signer: Signer): V2Migrator__factory {
    return super.connect(signer) as V2Migrator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V2MigratorInterface {
    return new utils.Interface(_abi) as V2MigratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V2Migrator {
    return new Contract(address, _abi, signerOrProvider) as V2Migrator;
  }
}

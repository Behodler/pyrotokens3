/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lachesis, LachesisInterface } from "../Lachesis";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "cut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "burnable",
        type: "bool",
      },
    ],
    name: "measure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "status",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061055e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806366ce93ca14610046578063adc25c0114610062578063e2ea87db14610092575b600080fd5b610060600480360381019061005b91906103bd565b6100c3565b005b61007c6004803603810190610077919061040c565b6101f6565b6040516100899190610457565b60405180910390f35b6100ac60048036038101906100a79190610394565b61022f565b6040516100ba929190610472565b60405180910390f35b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006002811061013b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190066101000a81548160ff021916908315150217905550806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001600281106101d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190066101000a81548160ff021916908315150217905550505050565b6000602052816000526040600020816002811061021257600080fd5b60209182820401919006915091509054906101000a900460ff1681565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281106102a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190069054906101000a900460ff166000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600160028110610336577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190069054906101000a900460ff1691509150915091565b600081359050610364816104e3565b92915050565b600081359050610379816104fa565b92915050565b60008135905061038e81610511565b92915050565b6000602082840312156103a657600080fd5b60006103b484828501610355565b91505092915050565b6000806000606084860312156103d257600080fd5b60006103e086828701610355565b93505060206103f18682870161036a565b92505060406104028682870161036a565b9150509250925092565b6000806040838503121561041f57600080fd5b600061042d85828601610355565b925050602061043e8582860161037f565b9150509250929050565b610451816104ad565b82525050565b600060208201905061046c6000830184610448565b92915050565b60006040820190506104876000830185610448565b6104946020830184610448565b9392505050565b60006104a6826104b9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6104ec8161049b565b81146104f757600080fd5b50565b610503816104ad565b811461050e57600080fd5b50565b61051a816104d9565b811461052557600080fd5b5056fea26469706673582212203d87fe7c6760625f4c0916f73a93ee79eb0f661e236ec8d931910eb041cf1abd64736f6c63430008040033";

export class Lachesis__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lachesis> {
    return super.deploy(overrides || {}) as Promise<Lachesis>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lachesis {
    return super.attach(address) as Lachesis;
  }
  connect(signer: Signer): Lachesis__factory {
    return super.connect(signer) as Lachesis__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LachesisInterface {
    return new utils.Interface(_abi) as LachesisInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lachesis {
    return new Contract(address, _abi, signerOrProvider) as Lachesis;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PyroSender, PyroSenderInterface } from "../PyroSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pyro",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "PyroToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610416806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630779afe61461003b5780631e9a69501461006b575b600080fd5b61005560048036038101906100509190610205565b610087565b6040516100629190610338565b60405180910390f35b61008560048036038101906100809190610254565b61011f565b005b60008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b81526004016100c492919061030f565b602060405180830381600087803b1580156100de57600080fd5b505af11580156100f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101169190610290565b90509392505050565b8173ffffffffffffffffffffffffffffffffffffffff16631e9a695030836040518363ffffffff1660e01b815260040161015a92919061030f565b602060405180830381600087803b15801561017457600080fd5b505af1158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac91906102b9565b505050565b6000813590506101c08161039b565b92915050565b6000815190506101d5816103b2565b92915050565b6000813590506101ea816103c9565b92915050565b6000815190506101ff816103c9565b92915050565b60008060006060848603121561021a57600080fd5b6000610228868287016101b1565b9350506020610239868287016101b1565b925050604061024a868287016101db565b9150509250925092565b6000806040838503121561026757600080fd5b6000610275858286016101b1565b9250506020610286858286016101db565b9150509250929050565b6000602082840312156102a257600080fd5b60006102b0848285016101c6565b91505092915050565b6000602082840312156102cb57600080fd5b60006102d9848285016101f0565b91505092915050565b6102eb81610353565b82525050565b6102fa81610365565b82525050565b61030981610391565b82525050565b600060408201905061032460008301856102e2565b6103316020830184610300565b9392505050565b600060208201905061034d60008301846102f1565b92915050565b600061035e82610371565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103a481610353565b81146103af57600080fd5b50565b6103bb81610365565b81146103c657600080fd5b50565b6103d281610391565b81146103dd57600080fd5b5056fea26469706673582212204cefa41cff7d24df935454d744301d307b4e9315ba69321187544105cc4f64ef64736f6c63430008040033";

export class PyroSender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PyroSender> {
    return super.deploy(overrides || {}) as Promise<PyroSender>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PyroSender {
    return super.attach(address) as PyroSender;
  }
  connect(signer: Signer): PyroSender__factory {
    return super.connect(signer) as PyroSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PyroSenderInterface {
    return new utils.Interface(_abi) as PyroSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PyroSender {
    return new Contract(address, _abi, signerOrProvider) as PyroSender;
  }
}

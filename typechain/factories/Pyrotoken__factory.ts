/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pyrotoken, PyrotokenInterface } from "../Pyrotoken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "value",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "burnt",
        type: "uint128",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "address",
        name: "liquidityReceiver",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "baseToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "exempt",
        type: "address",
      },
      {
        internalType: "enum FeeExemption",
        name: "status",
        type: "uint8",
      },
    ],
    name: "setFeeExemptionStatusFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityReceiver",
        type: "address",
      },
    ],
    name: "transferToNewLiquidityReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002ded38038062002ded83398181016040528101906200003791906200024e565b818181600390805190602001906200005192919062000115565b5080600490805190602001906200006a92919062000115565b5050506200007d6200010d60201b60201c565b600560000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000494565b600033905090565b82805462000123906200039f565b90600052602060002090601f01602090048101928262000147576000855562000193565b82601f106200016257805160ff191683800117855562000193565b8280016001018555821562000193579182015b828111156200019257825182559160200191906001019062000175565b5b509050620001a29190620001a6565b5090565b5b80821115620001c1576000816000905550600101620001a7565b5090565b6000620001dc620001d684620002ff565b620002d6565b905082815260208101848484011115620001f557600080fd5b6200020284828562000369565b509392505050565b6000815190506200021b816200047a565b92915050565b600082601f8301126200023357600080fd5b815162000245848260208601620001c5565b91505092915050565b6000806000606084860312156200026457600080fd5b600062000274868287016200020a565b935050602084015167ffffffffffffffff8111156200029257600080fd5b620002a08682870162000221565b925050604084015167ffffffffffffffff811115620002be57600080fd5b620002cc8682870162000221565b9150509250925092565b6000620002e2620002f5565b9050620002f08282620003d5565b919050565b6000604051905090565b600067ffffffffffffffff8211156200031d576200031c6200043a565b5b620003288262000469565b9050602081019050919050565b6000620003428262000349565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003895780820151818401526020810190506200036c565b8381111562000399576000848401525b50505050565b60006002820490506001821680620003b857607f821691505b60208210811415620003cf57620003ce6200040b565b5b50919050565b620003e08262000469565b810181811067ffffffffffffffff821117156200040257620004016200043a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620004858162000335565b81146200049157600080fd5b50565b61294980620004a46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b4114610331578063a457c2d71461034f578063a9059cbb1461037f578063dd62ed3e146103af578063f3b915d7146103df57610121565b806342966c681461028e5780634a4bff9a146102aa57806370a08231146102c657806379502c55146102f657806379cc67901461031557610121565b80631e9a6950116100f45780631e9a6950146101b057806323b872dd146101e0578063313ce56714610210578063395093511461022e57806340c10f191461025e57610121565b806306fdde0314610126578063095ea7b3146101445780630adcdbaa1461017457806318160ddd14610192575b600080fd5b61012e6103fb565b60405161013b91906120c0565b60405180910390f35b61015e60048036038101906101599190611d27565b61048d565b60405161016b91906120a5565b60405180910390f35b61017c6104ab565b6040516101899190612294565b60405180910390f35b61019a6105ad565b6040516101a79190612294565b60405180910390f35b6101ca60048036038101906101c59190611d27565b6105b7565b6040516101d79190612294565b60405180910390f35b6101fa60048036038101906101f59190611c9c565b6108a0565b60405161020791906120a5565b60405180910390f35b610218610998565b60405161022591906122af565b60405180910390f35b61024860048036038101906102439190611d27565b6109a1565b60405161025591906120a5565b60405180910390f35b61027860048036038101906102739190611d27565b610a4d565b6040516102859190612294565b60405180910390f35b6102a860048036038101906102a39190611d8c565b610d24565b005b6102c460048036038101906102bf9190611c37565b610d38565b005b6102e060048036038101906102db9190611c37565b610e82565b6040516102ed9190612294565b60405180910390f35b6102fe610eca565b60405161030c929190612053565b60405180910390f35b61032f600480360381019061032a9190611d27565b610f1c565b005b610339610f97565b60405161034691906120c0565b60405180910390f35b61036960048036038101906103649190611d27565b611029565b60405161037691906120a5565b60405180910390f35b61039960048036038101906103949190611d27565b611114565b6040516103a691906120a5565b60405180910390f35b6103c960048036038101906103c49190611c60565b611132565b6040516103d69190612294565b60405180910390f35b6103f960048036038101906103f49190611ceb565b6111b9565b005b60606003805461040a906124d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610436906124d5565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b5050505050905090565b60006104a161049a6112dd565b84846112e5565b6001905092915050565b600080600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161050c9190612001565b60206040518083038186803b15801561052457600080fd5b505afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190611db5565b90506000600254148061056f5750600081145b1561058557670de0b6b3a76400009150506105aa565b600254670de0b6b3a76400008261059c919061236d565b6105a6919061233c565b9150505b90565b6000600254905090565b6000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ece53132306040518263ffffffff1660e01b81526004016106179190612001565b602060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190611db5565b5060006106746104ab565b9050826000806106826112dd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106cb91906123c7565b9250508190555082600260008282546106e491906123c7565b9250508190555060006106fe846106f96112dd565b6114b0565b90506000818561070e91906123c7565b90506000670de0b6b3a76400008285610727919061236d565b610731919061233c565b9050600073ffffffffffffffffffffffffffffffffffffffff166107536112dd565b73ffffffffffffffffffffffffffffffffffffffff167fd94c96605b7cfa934c976dea75c09ddc9874e545045672180eb7be82d5c47a34888960405161079a92919061226b565b60405180910390a3600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88836040518363ffffffff1660e01b815260040161080292919061207c565b602060405180830381600087803b15801561081c57600080fd5b505af1158015610830573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108549190611d63565b610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a906121c2565b60405180910390fd5b8094505050505092915050565b60006108ad848484611588565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108f86112dd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096f90612162565b60405180910390fd5b61098c856109846112dd565b8584036112e5565b60019150509392505050565b60006012905090565b6000610a436109ae6112dd565b8484600160006109bc6112dd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a3e91906122e6565b6112e5565b6001905092915050565b6000600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ece53132306040518263ffffffff1660e01b8152600401610aad9190612001565b602060405180830381600087803b158015610ac757600080fd5b505af1158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff9190611db5565b506000610b0a6104ab565b9050600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610b556112dd565b30866040518463ffffffff1660e01b8152600401610b759392919061201c565b602060405180830381600087803b158015610b8f57600080fd5b505af1158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc79190611d63565b610bd057600080fd5b6000600560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c309190612001565b60206040518083038186803b158015610c4857600080fd5b505afa158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c809190611db5565b9050600082670de0b6b3a764000083610c99919061236d565b610ca3919061233c565b9050610caf8682611759565b8573ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fd94c96605b7cfa934c976dea75c09ddc9874e545045672180eb7be82d5c47a34876000604051610d10929190612242565b60405180910390a380935050505092915050565b610d35610d2f6112dd565b826118a4565b50565b600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc290612142565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e32906120e2565b60405180910390fd5b80600560000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000610f2f83610f2a6112dd565b611132565b905081811015610f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6b90612182565b60405180910390fd5b610f8883610f806112dd565b8484036112e5565b610f9283836118a4565b505050565b606060048054610fa6906124d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd2906124d5565b801561101f5780601f10610ff45761010080835404028352916020019161101f565b820191906000526020600020905b81548152906001019060200180831161100257829003601f168201915b5050505050905090565b600080600160006110386112dd565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156110f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ec90612202565b60405180910390fd5b6111096111006112dd565b858584036112e5565b600191505092915050565b60006111286111216112dd565b8484611588565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461124c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124390612142565b60405180910390fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360078111156112d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134c906121e2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bc90612122565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516114a39190612294565b60405180910390a3505050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166007811115611538577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b905060038110158061154b575060048111155b806115565750600581115b15611565576000915050611582565b6064600285611574919061236d565b61157e919061233c565b9150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115cb576115c681610d24565b611754565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600061161b838686611a66565b9050806002600082825461162f91906123c7565b925050819055506000818461164491906123c7565b9050838361165291906123c7565b6000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116e291906122e6565b925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fd94c96605b7cfa934c976dea75c09ddc9874e545045672180eb7be82d5c47a34868560405161174892919061226b565b60405180910390a35050505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c090612222565b60405180910390fd5b80600260008282546117db91906122e6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461183091906122e6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fd94c96605b7cfa934c976dea75c09ddc9874e545045672180eb7be82d5c47a34836000604051611898929190612242565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190b906121a2565b60405180910390fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561199a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199190612102565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546119f191906123c7565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fd94c96605b7cfa934c976dea75c09ddc9874e545045672180eb7be82d5c47a34846000604051611a59929190612242565b60405180910390a3505050565b600080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166007811115611aee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90506000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166007811115611b77577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b905060018210158015611b8b575060048211155b80611ba4575060048110158015611ba3575060068111155b5b15611bb457600092505050611bc7565b6103e886611bc2919061233c565b925050505b9392505050565b600081359050611bdd816128be565b92915050565b600081519050611bf2816128d5565b92915050565b600081359050611c07816128ec565b92915050565b600081359050611c1c816128fc565b92915050565b600081519050611c31816128fc565b92915050565b600060208284031215611c4957600080fd5b6000611c5784828501611bce565b91505092915050565b60008060408385031215611c7357600080fd5b6000611c8185828601611bce565b9250506020611c9285828601611bce565b9150509250929050565b600080600060608486031215611cb157600080fd5b6000611cbf86828701611bce565b9350506020611cd086828701611bce565b9250506040611ce186828701611c0d565b9150509250925092565b60008060408385031215611cfe57600080fd5b6000611d0c85828601611bce565b9250506020611d1d85828601611bf8565b9150509250929050565b60008060408385031215611d3a57600080fd5b6000611d4885828601611bce565b9250506020611d5985828601611c0d565b9150509250929050565b600060208284031215611d7557600080fd5b6000611d8384828501611be3565b91505092915050565b600060208284031215611d9e57600080fd5b6000611dac84828501611c0d565b91505092915050565b600060208284031215611dc757600080fd5b6000611dd584828501611c22565b91505092915050565b611de7816123fb565b82525050565b611df68161240d565b82525050565b611e058161246c565b82525050565b611e1481612490565b82525050565b6000611e25826122ca565b611e2f81856122d5565b9350611e3f8185602086016124a2565b611e4881612594565b840191505092915050565b6000611e60603d836122d5565b9150611e6b826125a5565b604082019050919050565b6000611e836022836122d5565b9150611e8e826125f4565b604082019050919050565b6000611ea66022836122d5565b9150611eb182612643565b604082019050919050565b6000611ec96023836122d5565b9150611ed482612692565b604082019050919050565b6000611eec6028836122d5565b9150611ef7826126e1565b604082019050919050565b6000611f0f6024836122d5565b9150611f1a82612730565b604082019050919050565b6000611f326021836122d5565b9150611f3d8261277f565b604082019050919050565b6000611f556020836122d5565b9150611f60826127ce565b602082019050919050565b6000611f786024836122d5565b9150611f83826127f7565b604082019050919050565b6000611f9b6025836122d5565b9150611fa682612846565b604082019050919050565b6000611fbe601f836122d5565b9150611fc982612895565b602082019050919050565b611fdd81612419565b82525050565b611fec81612455565b82525050565b611ffb8161245f565b82525050565b60006020820190506120166000830184611dde565b92915050565b60006060820190506120316000830186611dde565b61203e6020830185611dde565b61204b6040830184611fe3565b949350505050565b60006040820190506120686000830185611dde565b6120756020830184611dfc565b9392505050565b60006040820190506120916000830185611dde565b61209e6020830184611fe3565b9392505050565b60006020820190506120ba6000830184611ded565b92915050565b600060208201905081810360008301526120da8184611e1a565b905092915050565b600060208201905081810360008301526120fb81611e53565b9050919050565b6000602082019050818103600083015261211b81611e76565b9050919050565b6000602082019050818103600083015261213b81611e99565b9050919050565b6000602082019050818103600083015261215b81611ebc565b9050919050565b6000602082019050818103600083015261217b81611edf565b9050919050565b6000602082019050818103600083015261219b81611f02565b9050919050565b600060208201905081810360008301526121bb81611f25565b9050919050565b600060208201905081810360008301526121db81611f48565b9050919050565b600060208201905081810360008301526121fb81611f6b565b9050919050565b6000602082019050818103600083015261221b81611f8e565b9050919050565b6000602082019050818103600083015261223b81611fb1565b9050919050565b60006040820190506122576000830185611fd4565b6122646020830184611e0b565b9392505050565b60006040820190506122806000830185611fd4565b61228d6020830184611fd4565b9392505050565b60006020820190506122a96000830184611fe3565b92915050565b60006020820190506122c46000830184611ff2565b92915050565b600081519050919050565b600082825260208201905092915050565b60006122f182612455565b91506122fc83612455565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561233157612330612507565b5b828201905092915050565b600061234782612455565b915061235283612455565b92508261236257612361612536565b5b828204905092915050565b600061237882612455565b915061238383612455565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156123bc576123bb612507565b5b828202905092915050565b60006123d282612455565b91506123dd83612455565b9250828210156123f0576123ef612507565b5b828203905092915050565b600061240682612435565b9050919050565b60008115159050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006124778261247e565b9050919050565b600061248982612435565b9050919050565b600061249b82612419565b9050919050565b60005b838110156124c05780820151818401526020810190506124a5565b838111156124cf576000848401525b50505050565b600060028204905060018216806124ed57607f821691505b6020821081141561250157612500612565565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f5079726f746f6b656e3a204e6577204c6971756964697479205265636569766560008201527f722063616e6e6f7420626520746865207a65726f20616464726573732e000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f5079726f746f6b656e3a204f6e6c79204c69717569646974792052656365697660008201527f65722e0000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f5079726f746f6b656e2072657365727665207472616e736665722066616c6564600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6128c7816123fb565b81146128d257600080fd5b50565b6128de8161240d565b81146128e957600080fd5b50565b600881106128f957600080fd5b50565b61290581612455565b811461291057600080fd5b5056fea2646970667358221220b4b6684230babe7f5b2c5fb915f21b3dac1f982ea0f48f68f76d45739e2be28d64736f6c63430008040033";

export class Pyrotoken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    baseToken: string,
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pyrotoken> {
    return super.deploy(
      baseToken,
      name_,
      symbol_,
      overrides || {}
    ) as Promise<Pyrotoken>;
  }
  getDeployTransaction(
    baseToken: string,
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseToken,
      name_,
      symbol_,
      overrides || {}
    );
  }
  attach(address: string): Pyrotoken {
    return super.attach(address) as Pyrotoken;
  }
  connect(signer: Signer): Pyrotoken__factory {
    return super.connect(signer) as Pyrotoken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PyrotokenInterface {
    return new utils.Interface(_abi) as PyrotokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Pyrotoken {
    return new Contract(address, _abi, signerOrProvider) as Pyrotoken;
  }
}
